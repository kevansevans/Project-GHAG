Class GHAGEventHandler : EventHandler
{
	Gardevoir Gardie;
	
	override void WorldThingSpawned(WorldEvent event)
	{
		if (Gardevoir(event.thing)) return;
		else SetActorProperties(event.thing);
	}
	
	void SetActorProperties(Actor thing) 
	{
		if (Health(thing)) {
				
			let healItem = Health(thing);
			if (healItem.maxAmount < 350) {
				healItem.MaxAmount = 350;
			} else {
				healItem.MaxAmount = Int(healItem.MaxAmount * 1.75);
			}
			if(healItem.Amount >= 100) {
				healItem.Amount = Int(healItem.Amount * 1.75);
			}
			return;
		}
										//Nazis don't get to be shiny
		if (Actor(thing).bIsMonster && !WolfensteinSS(thing))
		{
			int rng = random(1, 4096);
			if (rng == 2048) 
			{
				SetShinyDemon(thing);
			}
		}
	}
	
	void SetShinyDemon(Actor thing)
	{
		let shinything = Actor(thing);
		if (!shinything) return;
		
		ActorTracker.TrackThing(thing, SHINY);
		
		if (Zombieman(shinything)) 
		{
			shinything.A_SetTranslation("ShinyZombie");
			return;
		}
		
		if (ShotgunGuy(shinything))
		{
			shinything.A_SetTranslation("ShinyShotgun");
			return;
		}
		
		if (ChaingunGuy(shinything))
		{
			shinything.A_SetTranslation("ShinyChaingun");
			return;
		}
		
		if (DoomImp(shinything))
		{
			shinything.A_SetTranslation("ShinyImp");
			return;
		}
		
		if (Demon(shinything)) 
		{
			shinything.A_SetTranslation("ShinyDemon");
			return;
		}
				
		if (HellKnight(shinything))
		{
			shinything.A_SetTranslation("ShinyKnight");
			return;
		}
		
		if (BaronOfHell(shinything))
		{
			shinything.A_SetTranslation("ShinyBaron");
			return;
		}
		
		if (Arachnotron(shinything))
		{
			shinything.A_SetTranslation("ShinySpidey");
			return;
		}
		
		if (Revenant(shinything))
		{
			shinything.A_SetTranslation("ShinyBoner");
			return;
		}
		
		if (Cacodemon(shinything))
		{
			shinything.A_SetTranslation("ShinyCaco");
			return;
		}
		
		if (LostSoul(shinything))
		{
			shinything.A_SetTranslation("ShinySoul");
			return;
		}
		
		if (PainElemental(shinything))
		{
			shinything.A_SetTranslation("ShinyPain");
			return;
		}
		
		if (Fatso(shinything))
		{
			shinything.A_SetTranslation("ShinyFatty");
			return;
		}
		
		if (Archvile(shinything))
		{
			shinything.A_SetTranslation("ShinyVile");
			return;
		}
		
		if (Cyberdemon(shinything))
		{
			shinything.A_SetTranslation("ShinyCybie");
			return;
		}
		
		if (SpiderMasterMind(shinything))
		{
			shinything.A_SetTranslation("ShinyMomma");
			return;
		}
		
		
	}

	//Killing an enemy will reset the anger delay timer.
	override void WorldThingDied(WorldEvent event) 
	{
		if (!gardie) return;
		if (ExplosiveBarrel(event.thing)) return;
		if (Gardevoir(event.thing.target) || ExplosiveBarrel(event.thing.target)) {
			Gardie.CatharsisBonus(event.thing);
		}
	}
	
	override void worldtick()
	{
		if (gardie)
		{
			//change rage value
			//set to any value aside from -1
			Cvar rage = Cvar.findCvar("ghagrage");
			if (rage) {
				if (rage.getInt() != -1) 
				{
					Gardie.RageValue = rage.getInt();
					rage.resetToDefault();
				}
			}
			
			//change the odds of an element punch inflicting it's status effect
			//set to -1 to reset it to a default of 25
			cvar punchodds = Cvar.findCvar("ghagpunchodds");
			if (punchodds) {
				let odds = InflictOdds.get();
				if (odds) {
					if (punchodds.getInt() != -1)
					{
						odds.chance = punchodds.getInt();
					} else if (odds.chance == -1) {
						odds.chance = 25;
					}
					punchodds.resetToDefault();
				}
			}
			
			/*cvar charon = Cvar.findCvar("ghagcharon");
			if (charon) {
				bool mode = charon.getBool();
				Gardie.charonmode = mode;
			}*/
		}
	}
	
	override void PlayerSpawned(PlayerEvent player) {
	
		Gardie = Gardevoir(players[player.PlayerNumber].mo);
		
		/*int rnd = random(0, 1);
		
		switch (rnd) {
		
			case 0 :
				console.printf("Don't let the dress fool you, I'm a boy, and you'll be calling it a kilt when I'm done with you");
				break;
			case 1 :
				console.printf("Get ready, wake your psyche up! Get ready, dig your anger up!");
				break;
		}*/
	}
	
	override void WorldLinePreActivated (WorldEvent event) 
	{
		if (!gardie) return;
		
		if (event.ActivatedLine.special == 243) {
			double ratio = double(level.Killed_Monsters) / double(level.total_monsters);
			int penalty = int(ratio * 1000);
			Gardie.RageValue -= 1000 - penalty;
			if (Gardie.RageValue <= 0) Gardie.RageValue = 0;
		}
	}
	
	override void WorldLoaded(WorldEvent event)
	{
		for (int i = 0; i < level.Sectors.Size(); i++)
		{
			if (level.sectors[i].isSecret())
			{
				let c = level.Sectors[i].centerspot;
				if (level.IsPointInLevel((c.x, c.y, level.Sectors[i].floorplane.ZAtPoint(c))))
				{
					Actor.Spawn("RageCandyBar", (c.x, c.y, level.Sectors[i].floorplane.ZAtPoint(c)));
				}
			}
		}
	}
}