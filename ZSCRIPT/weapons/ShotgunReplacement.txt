class GHAGShotgunOverlay : Ammo
{
	default
	{
		Inventory.MaxAmount 4;
		Inventory.pickupMessage "Seized an extra shotgun!";
	}
}

Class GHAGShotgun : Shotgun replaces Shotgun
{
	default
	{
		Weapon.SlotNumber 3;
		Tag "1912 Shotgun";
	}
	
	override void DoEffect()
	{
		players[consoleplayer].WeaponState |= WF_WEAPONBOBBING;
		super.DoEffect();
	}
	
	States
	{
		Select :
			HAND A 1 {
				A_Raise();
				A_OverlayShotguns();
			}
			Loop;
		Deselect :
			HAND A 1 {
				A_Lower();
				A_OverlayShotguns();
			}
			Loop;
		Ready :
			HAND A 1 {
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_OverlayShotguns();
			}
			Loop;
		Fire :
			HAND A 3 {
				A_SetTics(Gardevoir(self).GetTicModifier(3));
				A_OverlayShotguns();
			}
			HAND B 2 Bright {
				if (CountInv("Shell") != 0) A_GiveInventory("Shell");
				A_FireBullets(4, 4, 10, 5, "BulletPuff");
				A_FireBullets(4, 4, floor(14 * Gardevoir(Self).GetRageModifier()), 5, "GHAGPsychicPuff");
				A_StartSound("weapons/shotgf", CHAN_AUTO);
				A_SetTics(Gardevoir(self).GetTicModifier(2));
				A_OverlayShotguns(true);
			}
			HAND CCDDD 1 Bright;
			HAND E 3 A_SetTics(Gardevoir(self).GetTicModifier(3));
			HAND FGAAAAA 3 A_SetTics(Gardevoir(self).GetTicModifier(3));
			HAND A 7 A_ReFire();
			Goto Ready;
		AltFire:
			TNT1 A 0 {if (invoker.ammo1.amount <= 0) A_SelectWeapon("", SWF_SELECTPRIORITY);}
			HAND A 3 {
				A_SetTics(Gardevoir(self).GetTicModifier(3));
				A_OverlayShotguns();
			}
			HAND B 2 Bright {
				A_FireBullets(6, 6, 10 * Max(countinv("GHAGShotgunOverlay"), 3), 5, "GHAGPsychicPuff");
				A_TakeInventory("Shell", Max(countinv("GHAGShotgunOverlay"), 3));
				A_StartSound("weapons/shotgf", CHAN_AUTO);
				A_SetTics(Gardevoir(self).GetTicModifier(2));
				A_OverlayShotguns(true, true);
			}
			HAND CCDDD 1 Bright;
			HAND E 3;
			HAND FGAAAAA 3;
			HAND A 7 A_ReFire();
			Goto Ready;
			
		Select.Overlay:
		Deselect.Overlay:
		Ready.Overlay:
			SHTG A 999;
			stop;
		Fire.Overlay:
			SHTG G 5;
		Pump.Overlay :
			SHTG A 3 A_SetTics(Gardevoir(self).GetTicModifier(3));
			SHTG A 2 A_SetTics(Gardevoir(self).GetTicModifier(2));
			SHTG A 5 A_SetTics(Gardevoir(self).GetTicModifier(5));
			TNT1 A 0 A_StartSound("weapons/shotpm", CHAN_WEAPON);
			SHTG C 5 A_SetTics(Gardevoir(self).GetTicModifier(5));
			SHTG D 4 A_SetTics(Gardevoir(self).GetTicModifier(4));
			SHTG E 5 
			{
				A_SetTics(Gardevoir(self).GetTicModifier(5));
				A_StartSound("weapons/shotpl", CHAN_WEAPON);
			}
			SHTG F 999;
		AltFire.Overlay:
			SHTG G 5;
		AltPump.Overlay :
			SHTG A 3;
			SHTG A 2;
			SHTG A 5;
			TNT1 A 0 A_StartSound("weapons/shotpm", CHAN_WEAPON);
			SHTG C 5;
			SHTG D 4;
			SHTG E 5 A_StartSound("weapons/shotpl", CHAN_WEAPON);
			SHTG F 999;
	}
	
	Action void A_OverlayShotguns(bool rollForFire = false, bool altFire = false)
	{
		int rng = random(0, countinv("GHAGShotgunOverlay") - 1);
		for (int i = 0; i < countinv("GHAGShotgunOverlay"); i++)
		{
			if (i > 2) return;
		
			int layer = -1 * (i + 1);
			if (rollForFire && i == rng && !altFire) A_Overlay(layer, "Fire.Overlay", false);
			else if (altFire) A_Overlay(layer, "AltFire.Overlay", false);
			else A_Overlay(layer, "Ready.Overlay", false);
			A_OverlayFlags(layer, PSPF_ADDBOB, false);
			A_OverlayOffset(layer, sin(gametic + (63 * i)) + (25 * i), cos(gametic - (234 * i)) - (8 * i), WOF_INTERPOLATE);
		}
	}
	
	Action Void A_PsychicShell() {
		if (player == null) return;
		
		Weapon weap = player.ReadyWeapon;
		if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
		{
			if (!weap.DepleteAmmo (weap.bAltFire, true, 1))
				return;
		}
		
		let _locShell = PsychicShell(SpawnPlayerMissile("PsychicShell"));
		if (_locShell) _locShell.modifier = Gardevoir(Self).GetRageModifier();
	}
}

Class GHAGPsychicPuff : BulletPuff
{
	Default
	{
		Translation "96:111=250:254";
	}
}

Class GHAGSuperShotgun : ShellBox replaces SuperShotgun
{
	
}

Class PsychicShell : Actor
{

	double modifier;
	property modifier: modifier;
	
	bool fired;
	property fired: fired;

	Default {
		+FLOAT;
		+SCREENSEEKER;
		+NOGRAVITY;
		+Friendly;
		Speed 25;
		+ACTIVATEIMPACT;
		-ACTIVATEPCROSS;
		Projectile;
	}
	
	States {
	
		Spawn :
			PSHL AAA 2 
			{
				if (!tracer || tracer.health <= 0) 
				{
					A_SeekerMissile(0, 2, SMF_LOOK, 99999);
					fired = false;
				} 
				else  
				{
					A_FaceTarget();
					A_Chase();
					A_FaceTarget();
					float dist = Distance3D(tracer);
					if (dist <= 256) 
					{
						A_CustomBulletAttack(4, 4, 7, 5, "BulletPuff");
						A_StartSound("weapons/shotgf", CHAN_WEAPON);
						fired = true;
						Return ResolveState("Death");
					} 
				} 
				Return ResolveState(null);
			}
			Loop;
		Death :
			TNT1 A 1 {
				if (!fired) A_SpawnItem("ShellPickup");
			}
			stop;
	}
}

Class ShellPickup : ShellBox
{

	Default {
		Inventory.Amount 1;
		//+Gravity;
	}
	
	States {
		Spawn:
			PSHL B -1;
			Stop;
	}
}