Class SecretPistol : PistolPickup
{
	default
	{
		Inventory.PickupMessage "Found an extra pistol!";
	}
	
	override void Tick()
	{
		Inventory.Tick();
	}	
}

Class SecretShotgun : ShotgunPickup
{
	default
	{
		Inventory.PickupMessage "Found an extra shotgun!";
	}
	override void Tick()
	{
		Inventory.Tick();
	}	
}

Class ExtraNailgun : CustomInventory
{
	default
	{
		+Floatbob;
		Inventory.PickupMessage "Found an extra nailgun!";
	}
	States
	{
		Spawn :
			NAIL A 1 Bright
			{
				let player = Gardevoir(players[consoleplayer].mo);
				if (player.countinv("GHAGNailgunOverlay") == 4)
				{
					invoker.spawn("RageCandyBar", invoker.pos);
					invoker.destroy();
				}
			}
			Loop;
		Pickup :
			NAIL A 0
			{
				let player = Gardevoir(players[consoleplayer].mo);
				if (player.countinv("GHAGNailgun") == 0) 
				{
					player.giveInventory("GHAGNailgun", 1);
					player.A_SelectWeapon("GHAGNailGun");
				}
				player.giveInventory("GHAGNailgunOverlay", 1);
				player.giveInventory("Clip", 100);
			}
			stop;
	}
}

Class SecretPlasma : PlasmaPickup
{
	default
	{
		Inventory.PickupMessage "Found an extra Plasma Rifle!";
	}
	override void Tick()
	{
		Inventory.Tick();
	}
}

Class RageCandyBar : CustomInventory
{
	default
	{
		+Floatbob;
		Inventory.PickupMessage "Ate a Rage Candy Bar! Max anger raised!";
		Inventory.pickupsound "pickups/item";
	}

	states
	{
		Spawn:
			RAGE A 1;
			Loop;
		Pickup:
			TNT1 A 0
			{
				if (Gardevoir(players[consoleplayer].mo).RageConstant < 1000)
				{
					Gardevoir(players[consoleplayer].mo).IncreaseAngerRange(20);
				} 
				else 
				{
					Gardevoir(players[consoleplayer].mo).IncreaseAngerRange(10);
				}
			}
			stop;
	}
}