Class GHAGStatus : BaseStatusBar
{

	double v_width;
	double v_height;
	double textscale_reg;
	vector2 scale;
	
	bool lowHealth;
	
	string wtfString;
	
	Font fnt_white;
	HUDFont pokefont;
	
	override void Init() {
		Super.Init();
		
		scale = getHUDScale();
		
		SetSize(0, Screen.getWidth() / (scale.x / 2), Screen.getHeight() / (scale.y / 2));
		
		wtfString = wtf();
		
		fnt_white = "PKMNWHITE";
		pokefont = HUDFont.Create(fnt_white);
	}
	
	String activeMessage;
	int messageTimer;
	
	void hudMessageBox(String _msg = "", int _seconds = -1)
	{
		if (_msg != '') activemessage == _msg;
		if (_seconds != -1) messageTimer = _seconds;
		
		if (messageTimer > 0)
		{
			DrawImage("Dialog", (290, v_height - 75),  DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 1, (-1, -1), (1.5, 1.5));
			DrawString(pokefont, activeMessage, (300, v_height - 65), DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, Font.CR_BLACK, 1, 140, 4, (1.25, 1.25)); 
		}
	}
	
	override void Draw(int state, double tic) {
		
		Super.Draw(state, tic);
		
		BeginHUD();
		
		scale = getHUDScale();
		
		if (scale.x == 0) return;
		
		v_width = Screen.getWidth() / (scale.x);
		v_height = Screen.getHeight() / (scale.y);
		
		let gardie = Gardevoir(CPlayer.mo);
		if (!gardie) return;
		
		if (gardie.blocking)
		{
			int modifier = gardie.shield_health / 100;
			DrawImage('shield' .. modifier, (0, 200),  DI_ITEM_CENTER | DI_SCREEN_CENTER, 1, (-1, -1), (4, 4));
		}
		
		float xy_scale = 0.85;
		
		if (Gardie.health >= 175) {
			DrawBar("hpbar", "hparmbg", Min(Gardie.health, 350), 350, (86, v_height - 103), 0, 0, DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP);
			if (gardie.health > 350) {
				DrawBar("armbar", "hparmbg", Gardie.health - 350, 500 - 350, (86, v_height - 103), 0, 0, DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP);
			}
			lowHealth = false;
		} else if (gardie.health > 70) {
			DrawBar("hpbarhlf", "hparmbg", Min(Gardie.health, 350), 350, (86, v_height - 103), 0, 0, DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP);
			lowHealth = false;
		} else {
			DrawBar("angbar", "hparmbg", Min(Gardie.health, 350), 350, (86, v_height - 103), 0, 0, DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP);
			if (!lowHealth)
			{
				S_StartSound("ambient/LOWHEALTH", CHAN_BODY);
				lowHealth = true;
			}
		}
		DrawBar("armbar", "hparmbg", GetArmorAmount(), 200, (86, v_height - 82), 0, 0, DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP);
		DrawBar("angbar", "hparmbg", Gardie.RageValue, Gardie.RageConstant, (86, v_height - 19), 0, 0, DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP);
		DrawImage("BATTLHUD", (5, v_height - 110), DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP);
		
		if (Gardie.player.ReadyWeapon) {
		
			DrawString(pokefont, Gardie.player.ReadyWeapon.GetTag(), (30, v_height - 140),  DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, Font.CR_UNTRANSLATED, 1, -1, 4, (xy_scale, xy_scale));
			if (Gardie.player.ReadyWeapon.Ammo1) {
				DrawString(pokefont, 
							"Ammo: " .. Gardie.player.ReadyWeapon.Ammo1.amount .. "/" .. Gardie.player.ReadyWeapon.Ammo1.maxamount, 
							(30, v_height - 125), 
							DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 
							Font.CR_UNTRANSLATED, 1, -1, 4, 
							(xy_scale, xy_scale));
			}
			
		}
		DrawString(pokefont,
					Gardie.health .. "/350 HP ",
					(120, v_height - 106), 
					DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 
					Font.CR_UNTRANSLATED, 1, -1, 4,
					(0.75, 0.75));
					
		DrawString(pokefont,
					GetArmorAmount() .. " Armor",
					(120, v_height - 86), 
					DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 
					Font.CR_UNTRANSLATED, 1, -1, 4,
					(0.75, 0.75));
					
			
		if (gametic % 10 == 0) wtfString = wtf();
			
		if (Gardie.OverTheEdge) {
		
			DrawString(pokefont,
					wtfString,
					(110 + random(-10, 10), v_height - 25 + random(-10, 10)), 
					DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 
					Font.CR_UNTRANSLATED, 1, -1, 4,
					(0.75, 0.75));
		
			DrawString(pokefont,
					GetAngerString(),
					(23 + random(-10, 10), v_height - 60 + random(-10, 10)), 
					DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 
					Font.CR_DARKRED, 1, -1, 4, 
					(2.2, 2.2));
		}
	
		DrawString(pokefont,
					GetAngerString(),
					(23, v_height - 65), 
					DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 
					Font.CR_DARKRED, 1, -1, 4, 
					(2.2, 2.2));
					
		string angy_percent = String.Format("%.1f", (Float(Gardie.RageValue) / 10));
		string angry_cap = String.format("%.1f", (Float(Gardie.RageConstant) / 10));
		DrawString(pokefont,
					Gardie.RageValue > Gardie.RageConstant ? wtfString : angy_percent .. '/' .. angry_cap,
					(Gardie.RageValue > Gardie.RageConstant ? 110 : 120, v_height - 24), 
					DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 
					Font.CR_UNTRANSLATED, 1, -1, 4,
					(0.75, 0.75));
		
		int x_tracker = v_width - 1;
		for (let inv = gardie.inv; inv; inv = inv.inv)
		{
			string wep = '';
			if (inv is "weapon") {
				let gun = Weapon(inv);
				if (gun == Gardie.player.ReadyWeapon) {
					wep = "wepactiv";
				} else {
					wep = "wepinnac";
					if (gun.Ammo1) {
						if (gun.Ammo1.amount == 0) wep = "wepempty";
					}
				}
				
				drawImage(wep, (x_tracker -= 20, v_height - 20), DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 1, (-1, -1), (2.5, 2.5));
			}
		}
		
		bool locks[6];
		String image;
		for (int i = 0; i < 6; i++) locks[i] = CPlayer.mo.CheckKeys(i + 1, false, true);
		// key 1
		if (locks[1] && locks[4]) image = "STKEYS6";
		else if (locks[1]) image = "STKEYS0";
		else if (locks[4]) image = "STKEYS3";
		DrawImage(image, (v_width - 20, v_height - 35),  DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 1, (-1, -1), (1.5, 1.5));
		// key 2
		if (locks[2] && locks[5]) image = "STKEYS7";
		else if (locks[2]) image = "STKEYS1";
		else if (locks[5]) image = "STKEYS4";
		else image = "";
		DrawImage(image, (v_width - 35, v_height - 35),  DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 1, (-1, -1), (1.5, 1.5));
		// key 3
		if (locks[0] && locks[3]) image = "STKEYS8";
		else if (locks[0]) image = "STKEYS2";
		else if (locks[3]) image = "STKEYS5";
		else image = "";
		DrawImage(image, (v_width - 50, v_height - 35),  DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 1, (-1, -1), (1.5, 1.5));
		
		int rev_half = gardie.countinv("ReviveHalf");
		if (rev_half >= 1)
		{
			for (rev_half; rev_half > 0; --rev_half) {
				drawImage("HREVA0", (v_width - 14 - (rev_half * 6), v_height - 55), DI_ITEM_LEFT_TOP | DI_SCREEN_LEFT_TOP, 1, (-1, -1), (0.15, 0.15));
			}
		}
		
		hudMessageBox();
		
	}
	
	string wtf()
	{
		string value = '';
		for (int i = 0; i < 10; ++i)
		{
			int rng = Random(1, 2);
			if (rng % 2 == 0) value = value .. '!';
			else value = value .. '?';
		}
		return value;
	}
	
	string GetAngerString()
	{
		let gardie = Gardevoir(CPlayer.mo);
		if (!gardie) return "I'm so angry, I simply do not exist!";
		
		if (Gardie.RageValue < 0) return "your turn will come....";
		if (Gardie.overTheEdge) return "HELL HATH NO FURY";
		
		int anger = Min(Gardie.RageValue, 1000) / 100;
		switch (anger) {
			case 0:
				return "Calm";
			Case 1:
				return "Annoyed";
			case 2:
				return "Bitter";
			case 3:
				return "Heated";
			case 4:
				return "Fuming";
			case 5:
				return "Irate";
			case 6:
				return "Savage";
			case 7:
				return "Scorn";
			case 8:
				return "Livid";
			case 9:
			case 10:
				return "MURDEROUS";
		}
		
		return "So hecking angery, that idk what to call this!";
	}
}