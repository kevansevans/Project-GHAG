Class GHAGChaingun : ClipBox replaces Chaingun
{

}

Class GHAGPistolOverlay : Ammo
{
	Default
	{
		Inventory.MaxAmount 4;
		Inventory.pickupMessage "Found an extra pistol!";
	}
}

Class GHAGPistol : Pistol replaces Pistol
{

	Default
	{
		Weapon.SlotNumber 2;
		Tag "9mm Pistol";
	}
	
	override void DoEffect()
	{
		players[consoleplayer].WeaponState |= WF_WEAPONBOBBING;
		super.DoEffect();
	}

	states
	{
		Ready:
			HAND A 1 {
				A_WeaponReady();
				A_OverlayPistols();
			}
			Loop;
		Deselect:
			HAND A 1 {
				A_Lower();
				A_OverlayPistols();
			}
			Loop;
		Select:
			HAND A 1 {
				A_Raise();
				A_OverlayPistols();
			}
			Loop;
		Fire:
			HAND AB 3 {
				A_SetTics(Gardevoir(self).GetTicModifier(3, true));
			}
			HAND C 3 {
				A_SetTics(Gardevoir(self).GetTicModifier(3, false));
			}
			HAND D 3 {
				A_FireBullets(Gardevoir(self).GetAccuracyModifier(5.6), Gardevoir(self).GetAccuracyModifier(5.6), 1, 8, "BulletPuff");
				A_StartSound("weapons/pistol", CHAN_WEAPON);
				A_SetTics(Gardevoir(self).GetTicModifier(3));
				A_GunFlash();
				A_OverlayPistols(true);
			}
			HAND EF 1 A_SetTics(Gardevoir(self).GetTicModifier(1, true));
			HAND G 5
			{
				A_SetTics(Gardevoir(self).GetTicModifier(5, true));
				A_ReFire();
			}
			Goto Ready;
		AltFire:
			TNT1 A 0 {if (invoker.ammo1.amount <= 0) A_SelectWeapon("", SWF_SELECTPRIORITY);}
			HAND AB 3 {
				A_SetTics(Gardevoir(self).GetTicModifier(3, true));
			}
			HAND C 3 {
				A_SetTics(Gardevoir(self).GetTicModifier(3, false));
			}
			HAND D 3 {
				A_FireBullets(3.2, 3.2, Max(4, countinv("GHAGPistolOverlay")), 8, "BulletPuff");
				A_StartSound("weapons/pistol", CHAN_WEAPON);
				A_TakeInventory("clip", CountInv("GHAGPistolOverlay"));
				A_SetTics(Gardevoir(self).GetTicModifier(3));
				A_GunFlash();
				A_OverlayPistols(true, true);
			}
			HAND EF 1 A_SetTics(Gardevoir(self).GetTicModifier(1, true));
			HAND G 5
			{
				A_SetTics(Gardevoir(self).GetTicModifier(5, true));
				A_ReFire();
			}
			Goto Ready;
		Flash:
			TNT1 A 0;
			Goto LightDone;
		Fire.Overlay:
			PIST B 3 Bright A_SetTics(Gardevoir(self).GetTicModifier(3));
		Select.Overlay:
			PIST A 1;
			loop;
		Deselect.Overlay:
			PIST A 1;
			loop;
		Ready.Overlay:
			PIST A 1;
			loop;
	}
	
	Action void A_OverlayPistols(bool RollForFire = false, bool AltFire = false)
	{
		A_ClearOverlays(-5, 5);
		int rng = random(0, (CountInv("GHAGPistolOverlay") - 1));
		for (int i = 0; i < CountInv("GHAGPistolOverlay"); ++ i)
		{
			if (i > 3) return;
			
			int layer = -1 * (i + 1);
			if (i == rng && RollForFire || altFire) A_Overlay(layer, "Fire.Overlay", false);
			else A_Overlay(layer, "Ready.Overlay", true);
			A_OverlayFlags(layer, PSPF_ADDBOB, false);
			A_OverlayOffset(layer, (sin(gametic + (72 * i))) + (25 * i), (cos(gametic + (72 * i))) - (5 * i), WOF_INTERPOLATE);
		}
	}
}