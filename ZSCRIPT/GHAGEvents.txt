Class GHAGEventHandler : EventHandler
{
	Gardevoir Gardie;
	
	int shinyodds;
	
	bool mapHasMinimalSecrets;
	
	bool plasmaspawned;
	
	override void WorldThingSpawned(WorldEvent event)
	{
		if (Gardevoir(event.thing)) {
			gardie = Gardevoir(event.thing);
			return;
		}
		
		if (event.thing is "Inventory")
		{
			let item = event.thing;
		
			switch(event.thing.getClassName())
			{
				default:
					item.height = 32;
			}
		}
		
										//Nazis don't get to be shiny
		if (Actor(event.thing).bIsMonster && !WolfensteinSS(event.thing) && !event.thing.bFriendly)
		{
			if (shinyodds == 0) shinyodds = 4096;
			int rng = random(1, shinyodds);
			if (rng == shinyodds / 2 || shinyodds == 1) 
			{
				GHAGEventHandler.SetShinyDemon(event.thing);
			}
			return;
		}
		
		if (Health(event.thing)) {
				
			let healItem = Health(event.thing);
			if (healItem.maxAmount < 350) {
				healItem.MaxAmount = 350;
			} else {
				healItem.MaxAmount = Int(healItem.MaxAmount * 1.75);
			}
			if(healItem.Amount >= 100) {
				healItem.Amount = Int(healItem.Amount * 1.75);
			}
			return;
		}
		
		if (event.thing is "Weapon")
		{
			let gun = Weapon(event.thing);
			if (!gun) return;
			
			//Ignore any spawning GHAG weapons
			if (GHAGWeapon(gun))
			{
				return;
			}
			
			switch(gardie.iwadClass)
			{
				case 0:
					if (gun is "Gauntlets") 
					{
						gun.spawn("ExtraPsychoCutter", gun.pos);
						gun.destroy();
						return;
					}
					if (gun is "CrossBow") 
					{
						gun.spawn("ShellBox", gun.pos);
						gun.destroy();
						return;
					}
					if (gun is "Blaster")
					{
						gun.spawn("ClipBox", gun.pos);
						gun.destroy();
						return;
					}
					if (gun is "Mace")
					{
						gun.spawn("RocketBox", gun.pos);
						gun.destroy();
						return;
					}
					if (gun is "PhoenixRod" || gun is "SkullRod")
					{
						gun.spawn("CellPack", gun.pos);
						gun.destroy();
						return;
					}
					break;
			}
			
			//Agnostic weapon type check
			if (gun is "Pistol")
			{
				if (gardie.countinv("GHAGPistol") == 0) {
					gun.spawn("PistolPickup", gun.pos);
				} else {
					gun.spawn("Clipbox", gun.pos);
				}
				gun.destroy();
			}
			if (gun is "Shotgun")
			{
				if (gardie.countinv("GHAGShotgun") == 0) {
					gun.spawn("ShotgunPickup", gun.pos);
				} else {
					gun.spawn("Shellbox", gun.pos);
				}
				gun.destroy();
			}
			if (gun is "SuperShotgun")
			{
				if (gardie.countinv("GHAGSuperRailgun") == 0) {
					gun.spawn("SuperRailgunPickup", gun.pos);
				} else {
					gun.spawn("Shellbox", gun.pos);
				}
				gun.destroy();
			}
			if (gun is "Chaingun")
			{
				if (gardie.countinv("GHAGNailgun") == 0) {
					gun.spawn("NailgunPickup", gun.pos);
				} else {
					gun.spawn("Clipbox", gun.pos);
				}
				gun.destroy();
			}
			if (gun is "RocketLauncher")
			{
				gun.spawn("GHAGRocketBox", gun.pos);
				gun.destroy();
				return;
			}
			if (gun is "PlasmaRifle" || gun is "BFG9000")
			{
				if (gardie.countinv("GHAGPlasmaRifle") == 0) {
					gun.spawn("PlasmaPickup", gun.pos);
				} else {
					gun.spawn("CellPack", gun.pos);
				}
				gun.destroy();
			}
		}
		
		if (Ammo(event.thing))
		{
			let bullets = Ammo(Event.Thing);
			
			switch (gardie.iwadClass)
			{
				case 0:
					if (bullets is "GoldWandAmmo" || bullets is "BlasterAmmo")
					{
						bullets.spawn("Clip", bullets.pos);
						bullets.destroy();
						return;
					}
					if (bullets is "GoldWandHefty" || bullets is "BlasterHefty")
					{
						bullets.spawn("ClipBox", bullets.pos);
						bullets.destroy();
						return;
					}
					if (bullets is "CrossbowAmmo")
					{
						bullets.spawn("Shell", bullets.pos);
						bullets.destroy();
						return;
					}
					if (bullets is "CrossbowHefty")
					{
						bullets.spawn("ShellBox", bullets.pos);
						bullets.destroy();
						return;
					}
					if (bullets is "SkullRodAmmo")
					{
						bullets.spawn("GHAGRocketAmmo", bullets.pos);
						bullets.destroy();
						return;
					}
					if (bullets is "SkullRodHefty")
					{
						bullets.spawn("GHAGRocketBox", bullets.pos);
						bullets.destroy();
						return;
					}
					if (bullets is "PhoenixRodAmmo" || bullets is "MaceAmmo")
					{
						bullets.spawn("Cell", bullets.pos);
						bullets.destroy();
						return;
					}
					if (bullets is "PhoenixRodHefty" || bullets is "MaceHefty")
					{
						bullets.spawn("CellPack", bullets.pos);
						bullets.destroy();
						return;
					}
					break;
			}
		}
	}
	
	string getWeaponClass(String _type)
	{
		if (_type == "Clip") return "GHAGBulletBox";
		if (_type == "Shell") return "GHAGShellBox";
		if (_type == "RocketAmmo") return "GHAGRocketBox";
		if (_type == "Cell") return "GHAGCellPack";
	
		return "NullAmmoType";
	}
	
	static void SetShinyDemon(Actor thing)
	{
		let shinything = Actor(thing);
		if (!shinything) return;
		
		//ActorTracker.TrackThing(thing, SHINY);
		
		if (Zombieman(shinything)) 
		{
			shinything.A_SetTranslation("ShinyZombie");
			return;
		}
		
		if (ShotgunGuy(shinything))
		{
			shinything.A_SetTranslation("ShinyShotgun");
			return;
		}
		
		if (ChaingunGuy(shinything))
		{
			shinything.A_SetTranslation("ShinyChaingun");
			return;
		}
		
		if (DoomImp(shinything))
		{
			shinything.A_SetTranslation("ShinyImp");
			return;
		}
		
		if (Demon(shinything)) 
		{
			shinything.A_SetTranslation("ShinyDemon");
			return;
		}
				
		if (HellKnight(shinything))
		{
			shinything.A_SetTranslation("ShinyKnight");
			return;
		}
		
		if (BaronOfHell(shinything))
		{
			shinything.A_SetTranslation("ShinyBaron");
			return;
		}
		
		if (Arachnotron(shinything))
		{
			shinything.A_SetTranslation("ShinySpidey");
			return;
		}
		
		if (Revenant(shinything))
		{
			shinything.A_SetTranslation("ShinyBoner");
			return;
		}
		
		if (Cacodemon(shinything))
		{
			shinything.A_SetTranslation("ShinyCaco");
			return;
		}
		
		if (LostSoul(shinything))
		{
			shinything.A_SetTranslation("ShinySoul");
			return;
		}
		
		if (PainElemental(shinything))
		{
			shinything.A_SetTranslation("ShinyPain");
			return;
		}
		
		if (Fatso(shinything))
		{
			shinything.A_SetTranslation("ShinyFatty");
			return;
		}
		
		if (Archvile(shinything))
		{
			shinything.A_SetTranslation("ShinyVile");
			return;
		}
		
		if (Cyberdemon(shinything))
		{
			shinything.A_SetTranslation("ShinyCybie");
			return;
		}
		
		if (SpiderMasterMind(shinything))
		{
			shinything.A_SetTranslation("ShinyMomma");
			return;
		}
		
		
	}

	//Killing an enemy will reset the anger delay timer.
	override void WorldThingDied(WorldEvent event) 
	{
		if (!gardie) return;
		if (ExplosiveBarrel(event.thing)) return;
		if (event.thing.target is 'PlayerPawn' ||
			event.thing.target is 'ExplosiveBarrel' ||
			event.thing.target is 'Pod' ||
			event.thing.target is 'GHAGChainRailMarker'
			) {
			CatharsisBonus(event.thing);
		}
	}
	
	void CatharsisBonus(Actor thing) 
	{
		if (!thing) return;
		
		let gardie = Gardevoir(players[consoleplayer].mo);
		if (!gardie) return;
		
		int angerBonus = Max(int(thing.spawnHealth() / 5), 1);
		int willBonus = int(AngerBonus / 10);
		
		
		if (WolfensteinSS(thing)) angerbonus = 3000;
		
		if (gardie.player.ReadyWeapon is "PokemonMove")
		{
			return;
		}
		
		else 
		
		{
		
			while (true) 
			{
				let rageitem = RageEssence(thing.A_DropItem("RageEssence", 1));
				rageitem.A_SetPitch(random(60, 80));
				rageitem.A_SetAngle(random(1, 360));
			
				if (WolfensteinSS(thing)) 
				{
					rageitem.amount = 100;
					rageitem.A_SetScale(1, 1);
					angerbonus -= 100;
					rageitem.A_ChangeVelocity(random(-4, 4), random(-4, 4), random(-4, 4), CVF_REPLACE);
					rageitem.A_SetPitch(random(80, 120));
					if (angerbonus <= 0) break;
					else continue;
				}
			
				rageitem.A_ChangeVelocity(random(-2, 2), random(-2, 2), random(-2, 2), CVF_REPLACE);
				
				if (angerbonus >= 1000) 
				{
					rageitem.amount = 500;
					rageitem.A_SetScale(3, 3);
					angerbonus -= 500;
				} 
				else if (angerbonus >= 500)
				{
					rageitem.amount = 250;
					rageitem.A_SetScale(2, 2);
					angerbonus -= 250;
				}
				else if (angerbonus >= 250)
				{
					rageitem.amount = 100;
					rageitem.A_SetScale(1.5, 1.5);
					angerbonus -= 100;
				} 
				else if (angerbonus >= 50)
				{
					rageitem.amount = 50;
					rageitem.A_SetScale(1, 1);
					angerbonus -= 50;
				}
				else if (angerbonus >= 5)
				{
					rageitem.amount = 5;
					rageitem.A_SetScale(0.5, 0.5);
					angerbonus -= 5;
				}
				else if (angerbonus <= 5)
				{
					rageitem.amount = angerbonus;
					rageitem.A_SetScale(0.5, 0.5);
					break;
				}
			}
		}
		
		if (willBonus > 0) {
			let healitem = HealEssence(thing.A_DropItem("HealEssence", 1));
			healitem.amount = willBonus;
			if (WolfensteinSS(thing)) healitem.amount = 350;
			healitem.A_ChangeVelocity(random(-2, 2), random(-2, 2), random(-2, 2), CVF_REPLACE);
			healitem.A_SetPitch(random(60, 80));
			healitem.A_SetAngle(random(1, 360));
		}
	}
	
	override void worldtick()
	{
		if (gardie)
		{
			//change rage value
			//set to any value aside from -1
			Cvar rage = Cvar.findCvar("ghagrage");
			if (rage) {
				if (rage.getInt() != -1) 
				{
					Gardie.RageValue = rage.getInt();
					rage.resetToDefault();
				}
			}
			
			//change the odds of a demon spawning as shiny
			cvar c_shinyodds = Cvar.findCvar("shinyodds");
			if (c_shinyodds) {
				if (c_shinyodds.getInt() != -1) {
					shinyodds = c_shinyodds.getInt();
					c_shinyodds.setInt(-1);
				}
			}
			
			/*cvar charon = Cvar.findCvar("ghagcharon");
			if (charon) {
				bool mode = charon.getBool();
				Gardie.charonmode = mode;
			}*/
		}
	}
	
	override void PlayerSpawned(PlayerEvent player) {
	
		Gardie = Gardevoir(players[player.PlayerNumber].mo);
		
	}
	
	override void WorldLinePreActivated (WorldEvent event) 
	{
		if (!gardie) return;
	}
	
	int numSecrets;
	int weaponspawned;
	
	override void WorldLoaded(WorldEvent event)
	{
		if (gardie) {
			gardie.initFloatWeapons();
			gardie.updateWeapons = true;
		}
	
		numSecrets = 0;
		mapHasMinimalSecrets = true;
		for (int i = 0; i < level.Sectors.Size(); i++)
		{
			if (level.sectors[i].isSecret())
			{
				++numSecrets;
			}
		}
		
		if (numSecrets == 0)
		{
			//Free candybar to make sure anger scales with custom maps
			RageCandyBar(Actor.spawn('RageCandyBar')).touch(gardie);
		}
		else
		{
			int secCount = 0;
			for (int i = 0; i < level.Sectors.Size(); i++)
			{
				if (level.sectors[i].isSecret())
				{
					let c = level.Sectors[i].centerspot;
					if (level.IsPointInLevel((c.x, c.y, level.Sectors[i].floorplane.ZAtPoint(c))))
					{
						SpawnBonusItem(c.x, c.y, level.Sectors[i].floorplane.ZAtPoint(c), secCount == 1);
					}
					if (level.levelnum != 1) ++secCount;
				}
			}
		}
	}
	
	void SpawnBonusItem(double _x, double _y, double _z, bool _gun)
	{
		int limit = GameInfo.GameType == 1 ? 4 : 2;
		int rng = random(1, 10);
		if (!_gun) Actor.spawn('RageCandyBar', (_x, _y, _z));
		else
		{
			Array<name> gunlist;
			gunlist.clear();
			
			name winner = 'RageCandyBar';
			
			if (gardie.countInv('GHAGPistol'))
			{
				if (gardie.countInv('GHAGPistolOverlay') < 4) gunlist.push(Int('SecretPistol'));
			}
			
			if (gardie.countInv('GHAGShotgun'))
			{
				if (gardie.countInv('GHAGShotgunOverlay') < 4) gunlist.push(Int('SecretShotgun'));
			}
			
			if (gardie.countInv('GHAGNailgun'))
			{
				if (gardie.countInv('GHAGNailgunOverlay') < 4) gunlist.push(Int('SecretNailgun'));
			}
			
			if (gardie.countInv('GHAGPlasmaRifle'))
			{
				if (gardie.countInv('GHAGPlasmaOverlay') < 4) gunlist.push(Int('SecretPlasma'));
			}
			
			if (gardie.countInv('GHAGSuperRailgun'))
			{
				if (gardie.countInv('GHAGSuperRailgunOverlay') < 4) gunlist.push(Int('SecretRailgun'));
			}
			
			winner = Name(gunlist[random(0, gunlist.size() - 1)]);
			Actor.spawn(winner, (_x, _y, _z));
		}
	}
}

Class DummyActor : Actor
{}