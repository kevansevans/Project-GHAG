class GHAGShotgunOverlay : Ammo
{
	default
	{
		Inventory.MaxAmount 4;
		Inventory.pickupMessage "Seized an extra shotgun!";
	}
}

Class ShellReplacement : CustomInventory replaces Shell
{
	default {
		Inventory.PickupMessage "$GOTSHELLS";
	}
	States
	{
		Spawn:
			SHEL A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				let gardie = Gardevoir(Players[consoleplayer].mo);
				if (gardie.countinv("GHAGShotgun") == 0)
				{
					gardie.giveInventory("GHAGShotgun", 1);
					gardie.giveInventory("GHAGShotgunOverlay", 1);
				}
				gardie.giveInventory("Shell", 4);
			}
			stop;
	}
}

Class ShellBoxReplacement : CustomInventory
{
	default
	{
		Inventory.PickupMessage "$GOTSHELLBOX";
	}
	States
	{
		Spawn:
			SBOX A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				let gardie = Gardevoir(Players[consoleplayer].mo);
				if (gardie.countinv("GHAGShotgun") == 0)
				{
					gardie.giveInventory("GHAGShotgun", 1);
					gardie.giveInventory("GHAGShotgunOverlay", 1);
				}
				gardie.giveInventory("Shell", 20);
			}
			stop;
	}
}

Class GHAGShotgun : Weapon
{
	default
	{
		Weapon.SlotNumber 3;
		Weapon.AmmoType1 "Shell";
		Weapon.AmmoType2 "Shell";
		Tag "1912 Shotgun";
	}
	
	override void BeginPlay()
	{
		self.AmmoUse1 = 1;
		self.AmmoUse2 = countinv("GHAGShotgunOverlay");
	}
	
	override void DoEffect()
	{
		players[consoleplayer].WeaponState |= WF_WEAPONBOBBING;
		super.DoEffect();
	}
	
	int layer;
	
	States
	{
		Select :
			HAND A 1 {
				A_Raise();
				A_OverlayShotguns();
			}
			Loop;
		Deselect :
			HAND A 1 {
				A_Lower();
				A_OverlayShotguns();
			}
			Loop;
		Ready :
			HAND A 1 {
				Invoker.AmmoUse2 = countinv("GHAGShotgunOverlay");
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_OverlayShotguns();
			}
			Loop;
		Fire :
			HAND A 3 {
				A_SetTics(Gardevoir(self).GetTicModifier(3));
				A_OverlayShotguns();
			}
			HAND B 2 Bright {
				if (CountInv("Shell") != 0) A_GiveInventory("Shell");
				A_FireBullets(4, 4, 10, 5, "BulletPuff");
				A_FireBullets(4, 4, floor(14 * Gardevoir(Self).GetRageModifier()), 5, "GHAGPsychicPuff");
				A_StartSound("weapons/shotgf", CHAN_AUTO);
				A_SetTics(Gardevoir(self).GetTicModifier(2));
				A_OverlayShotguns(true);
			}
			HAND CCDDD 1 Bright;
			HAND E 3 A_SetTics(Gardevoir(self).GetTicModifier(3));
			HAND FGAAAAA 3 A_SetTics(Gardevoir(self).GetTicModifier(3));
			HAND A 7 A_ReFire();
			Goto Ready;
		AltFire:
			HAND A 3 {
				A_SetTics(Gardevoir(self).GetTicModifier(3));
				A_OverlayShotguns();
			}
			HAND B 2 Bright {
				A_FireBullets(6, 6, 10 * Max(countinv("GHAGShotgunOverlay"), 3), 5, "GHAGPsychicPuff");
				A_TakeInventory("Shell", Max(countinv("GHAGShotgunOverlay"), 3));
				A_StartSound("weapons/shotgf", CHAN_AUTO);
				A_SetTics(Gardevoir(self).GetTicModifier(2));
				A_OverlayShotguns(true, true);
			}
			HAND CCDDD 1 Bright;
			HAND E 3;
			HAND FGAAAAA 3;
			HAND A 7 A_ReFire();
			Goto Ready;
			
		Select.Overlay:
		Deselect.Overlay:
		Ready.Overlay:
			SHTG A 999;
			stop;
		Fire.Overlay:
			SHTG G 5 
			{
				for (int i = 0; i < countinv("GHAGShotgunOverlay"); i++)
				{
					int layer = -1 * (i + 1);
					A_OverlayPivot(layer, 53, 0, WOF_ADD | WOF_KEEPY);
				}
			}
		Pump.Overlay :
			/*TNT1 A 0
			{
				for (int i = 0; i < countinv("GHAGShotgunOverlay"); i++)
				{
					int layer = -1 * (i + 1);
					A_OverlayPivot(layer);
				}
			}*/
			GSHT A 3 A_SetTics(Gardevoir(self).GetTicModifier(3));
			GSHT A 2 A_SetTics(Gardevoir(self).GetTicModifier(2));
			GSHT A 5 A_SetTics(Gardevoir(self).GetTicModifier(5));
			TNT1 A 0 A_StartSound("weapons/shotpm", CHAN_WEAPON);
			GSHT C 5 A_SetTics(Gardevoir(self).GetTicModifier(5));
			GSHT D 4 A_SetTics(Gardevoir(self).GetTicModifier(4));
			GSHT E 5 
			{
				A_SetTics(Gardevoir(self).GetTicModifier(5));
				A_StartSound("weapons/shotpl", CHAN_WEAPON);
			}
			GSHT F 999;
		AltFire.Overlay:
			GSHT G 5 
			{
				for (int i = 0; i < countinv("GHAGShotgunOverlay"); i++)
				{
					int layer = -1 * (i + 1);
					A_OverlayPivot(layer, 2, 0, WOF_ADD | WOF_KEEPY);
				}
			}
		AltPump.Overlay :
			/*TNT1 A 0
			{
				for (int i = 0; i < countinv("GHAGShotgunOverlay"); i++)
				{
					int layer = -1 * (i + 1);
					A_OverlayFlags(layer, PSPF_PIVOTPERCENT, true);
					A_OverlayPivot(layer, 0.2, 0);
				}
			}*/
			GSHT A 3;
			GSHT A 2;
			GSHT A 5;
			TNT1 A 0 A_StartSound("weapons/shotpm", CHAN_WEAPON);
			GSHT C 5;
			GSHT D 4;
			GSHT E 5 A_StartSound("weapons/shotpl", CHAN_WEAPON);
			GSHT F 999;
	}
	
	Action void A_OverlayShotguns(bool rollForFire = false, bool altFire = false, bool melee = false)
	{
		int rng = random(0, countinv("GHAGShotgunOverlay") - 1);
		for (int i = 0; i < countinv("GHAGShotgunOverlay"); i++)
		{
			int layer = invoker.layer = -1 * (i + 1);
			
			if (rollForFire && i == rng && !altFire) A_Overlay(layer, "Fire.Overlay", false);
			else if (altFire) A_Overlay(layer, "AltFire.Overlay", false);
			else A_Overlay(layer, "Ready.Overlay", false);
			
			A_OverlayFlags(layer, PSPF_ADDBOB | PSPF_PIVOTPERCENT, false);
			if ((i + 1) % 2 == 0) A_OverlayFlags(layer, PSPF_FLIP | PSPF_MIRROR, true);
			A_OverlayOffset(layer, sin(gametic + (63 * i)) + (55 * (i / 2)) + 30, cos(gametic - (234 * i)) - (18 * (i / 2)), WOF_INTERPOLATE);
			if (i >= 2) {
				//A_OverlayRotate(layer, 15);
				//A_OverlayPivot(invoker.layer, 53, 0, WOF_ADD | WOF_KEEPY);
			}
		}
	}
}

Class GHAGPsychicPuff : BulletPuff
{
	Default
	{
		Translation "96:111=250:254";
	}
}

Class GHAGSuperShotgun : ShellBox replaces SuperShotgun
{
	
}