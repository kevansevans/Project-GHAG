Class GHAGPsychoCutterOverlay : Ammo
{
	default
	{
		Inventory.MaxAmount 4;
	}
}

Class ExtraPsychoCutter : CustomInventory replaces Chainsaw
{
	default
	{
		+Floatbob;
		Inventory.PickupMessage "";
		Inventory.pickupsound "misc/w_pkup";
	}
	States
	{
		Spawn:
			CSAW A 1 Bright
			{
				let player = Gardevoir(players[consoleplayer].mo);
				if (player.countinv("GHAGPsychoCutterOverlay") == 4)
				{
					invoker.spawn("RageCandyBar", invoker.pos);
					invoker.destroy();
				}
			}
			Loop;
		Pickup :
			TNT1 A 0
			{
				let player = Gardevoir(players[consoleplayer].mo);
				player.giveInventory("GHAGPsychoCutterOverlay", 1);
				if (player.countinv("GHAGPsychoCutter") == 0) player.giveInventory("GHAGPsychoCutter", 1);
			}
			stop;
	}
}

Class GHAGPsychoCutter : Weapon
{
	Default
	{
		Weapon.SlotNumber 1;
		Tag "Psycho Cutter";
	}
	
	States
	{
		Select:
			HAND A 1 {
				A_Raise();
				A_OverlayChainsaws();
			}
			Loop;
		Deselect:
			HAND A 1
			{
				A_Lower();
				A_OverlayChainsaws();
			}
			Loop;
		Ready:
			HAND A 1 
			{
				A_WeaponReady();
				A_OverlayChainsaws();
			}
			Loop;
		Fire:
			HAND JJJJ 1 A_OverlayChainsaws(true);
			TNT1 A 0 {
				for (int i = 0; i < countInv('GHAGPsychoCutterOverlay'); ++i)
				{
					A_Saw(	"weapons/sawfull", 
							"weapons/sawhit", 
							2 * countInv('GHAGPsychoCutterOverlay'), 
							"BulletPuff", 
							SF_NOUSEAMMO | SF_NOPULLIN | SF_NOTURN, 
							56 + (8 * countInv('GHAGPsychoCutterOverlay') + (44 * Gardevoir(self).getRageModifier())), 
							4.8125 * countInv('GHAGPsychoCutterOverlay')
						);
				}
			}
			goto Ready;
		Overlay:
			PSAW AB 2;
			stop;
	}
	
	Action Void A_OverlayChainsaws(bool _psycho = false)
	{
		if (_psycho) {
			for (int i = 0; i < countInv('GHAGPsychoCutterOverlay'); ++i)
			{
				int layer = (i * -1) -1;
				
				A_DrawChainsaw("Overlay", layer, true);
				A_OverlayPivot(layer);
				A_OverlayRotate(layer, 45 + (15 * sin(gametic) * (i >= 2 ? -1 : 1)));
				
				A_OverlayOffset(layer, 
								//x offset
								sin(gametic * (i + 1) * 3.0) * (80 + (80 * Gardevoir(self).getRageModifier())) * (Gardevoir(self).getRageModifier() * 1.5), 
								//y offset
								100, 
								WOF_INTERPOLATE);
			}
		}
		else
		{
			for (int i = 0; i < countInv('GHAGPsychoCutterOverlay'); ++i)
			{
				int layer = (i * -1) - 1;
				
				A_DrawChainsaw("Overlay", layer, true);
				A_OverlayRotate(layer, 0);
				A_OverlayOffset(layer, (i >= 2 ? -200 : -150), (cos(gametic * layer) * 4) + 50 + (i >= 2 ? -30 : 0), WOF_INTERPOLATE);
			}
		}
	}
	
	//Reduce duplicate code for A_Overlay shared between both modes
	Action void A_DrawChainsaw(statelabel statename, int layer, bool _override)
	{
		A_Overlay(layer, statename, _override);
		A_OverlayFlags(layer, PSPF_ADDBOB, false);
		int i = (layer + 1) * -1;
		if (i % 2 == 0) A_OverlayFlags(layer, PSPF_FLIP | PSPF_MIRROR, true);
	}
	
}

Class GHAGPsychoProjectile : Actor
{
	states
	{
		Spawn:
			CSAW A 1 Bright;
			Loop;
		Death :
			CSAW A 1 Bright;
			stop;
	}
}